

function arr_elements(arr,n){
    if(n==null)
    //console.log(n);
    return arr[0];
    return arr.slice(0,n)
}


console.log(arr_elements([7,9,0,-2]));

Output:
7

//var n=0;
function arr_elements(arr,n){
    if(n==null)
    //console.log(n);
    return arr[0];
    return arr.slice(0,n)
}

console.log(arr_elements([0,6,4,5]));
Output:
0

//var n=0;
function arr_elements(arr,n){
    if(n==null)
    //console.log(n);
    return arr[0];
    return arr.slice(0,n)
}


console.log(arr_elements([1,2,3,4],3));
Output:
[ 1, 2, 3 ]
function arr_elements(arr,n){
    if(n==null)
    //console.log(n);
    return arr[0];
    if(n<0)
    return [];
    return arr.slice(0,n)
}


console.log(arr_elements([1,2,3,4],-3));
Output:
[]

Question 2



function arr_elements(arr,n){
    if(n==null)
    return arr[arr.length-1];
    return arr.slice(0,-n)
}


console.log(arr_elements([7,9,0,-2]));
Output:
-2

function arr_elements(arr,n){
    if(n==null)
    return arr[arr.length-1];
    return arr.splice(-n)
}


console.log(arr_elements([7,9,0,-2],3));
Output:
[ 9, 0, -2 ]


function arr_elements(arr,n){
    if(n==null)
    return arr[arr.length-1];
    return arr.splice(-n)
}


console.log(arr_elements([7,9,0,-2],6));

Output:
[ 7, 9, 0, -2 ]




1.a. Print Odd numbers in an array
----------------------------------------------------
function arr_elements(arr){
   var arr1=[];
   for (i=0;i<arr.length;i++)
   {
      if(arr[i]%2!==0)
      arr1.push(arr[i]);
   }
   return arr1;
  }


console.log(arr_elements([7,9,0,2,4,8,11,13,79]));

Output:
[ 7, 9, 11, 13, 79 ]


B. Convert all the strings to title caps in a string array

function arr_elements(arr){
   var arr1=[];
   for (i=0;i<arr.length;i++)
   {
      arr1[i]=arr[i].toUpperCase()
   }
   return arr1;
  }


console.log(arr_elements(["ab","bc","mn"]));
Output:
[ 'AB', 'BC', 'MN' ]

C. Sum of all numbers in an array

function arr_elements(arr){
   var arr1=0;
   for (i=0;i<arr.length;i++)
   {
      arr1=arr1+arr[i]
   }
   return arr1;
  }


console.log(arr_elements([1,5,6,7,9,8]));
Output:
36


D. Return all the prime numbers in an array

function arr_elements(arr){
 var primes=[];
 for (var i=0;i<arr.length;i++)
 {
     if (isElementPrime(arr[i]))
     primes.push(arr[i])
 }
 return primes;
}

function isElementPrime(n)
{
    if(n<=1)
    return false;
    else
    {
        for (var j=2;j<n;j++)
        {
            if(n%j===0)
            return false;
        }
        return true;
    }
}
console.log(arr_elements([1,5,6,7,9,11,13,17,46,29]));

Output:
[ 5, 7, 11, 13, 17, 29 ]



E. Return all the palindromes in an array
//var arr=[]
function arr_elements(arr){
    pal=[];
    for( let i=0;i<arr.length;i++){
        //console.log(arr[i])
        if(isPalindrome(arr[i]))
        pal.push(arr[i])
    }
    //console.log(pal)
    return pal;
}
 function isPalindrome(word)
 {
     let p=word.split("").reverse().join("")
     if (p===word)
     return word;
     else
     return false;
}
 
 
 console.log(arr_elements(["madam","girl","racecar","level","ambition","rotor"]));

Output:
[ 'madam', 'racecar', 'level', 'rotor' ]
 

F.  Return median of two sorted arrays of same size
function arr_elements(arr1,arr2){
    
    for (i=0;i<arr2.length;i++)
    {
        arr1.push(arr2[i])//merging two arrays
    }
    mid=arr1.length/2-1
    return (arr1[mid]+arr1[mid+1])/2
    }
    
    console.log(arr_elements([1,2,3,4,5],[6,7,8,9,10]));

Output:
5.5

G. Remove duplicated from an array
function arr_elements(arr){
    var temp=[];
    temp.push(arr[0])
    for (i=1;i<arr.length;i++)
    {
        var result=0;
        for(j=0;j<i;j++)
        {
            if(arr[i]==arr[j])
            result=result+1;
    }
    if(result ===0)
    temp.push(arr[i]);
    }
    
    return temp;
}
    
    
        
    
    console.log(arr_elements([1,2,3,1,2]));

Output:
[ 1, 2, 3 ]

H. Rotate an array by k times
function arr_elements(arr,k){

if(k>0)
{
for (i=1;i<=k;i++)
{
 var last=arr.shift();
 //console.log(last)
 arr.push(last)
 //console.log(arr)
}  
}
    return arr;
}


    
console.log(arr_elements([1,2,3,4,5],3));

Output:
[ 4, 5, 1, 2, 3 ]

